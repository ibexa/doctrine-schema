name: CI

on:
    push:
        branches:
            - main
            - '[0-9]+.[0-9]+'
    pull_request: ~

jobs:
    cs-fix:
        name: Run code style check
        runs-on: "ubuntu-22.04"
        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP Action
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.3'
                    coverage: none
                    extensions: pdo_sqlite, gd
                    tools: cs2pr

            -   uses: ramsey/composer-install@v3
                with:
                    dependency-versions: highest

            -   name: Run code style check
                run: composer run-script check-cs -- --format=checkstyle | cs2pr

    rector:
        name: Run rector
        runs-on: "ubuntu-22.04"
        strategy:
            matrix:
                php:
                    - '8.3'
        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP Action
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none
                    extensions: 'pdo_sqlite, gd'
                    tools: cs2pr

            -   uses: ramsey/composer-install@v3
                with:
                    dependency-versions: highest

            -   name: Run rector
                run: vendor/bin/rector process --dry-run --ansi

    tests:
        name: Tests on SQLite
        runs-on: "ubuntu-22.04"
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                php:
                    - '8.3'

        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP Action
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none
                  extensions: pdo_sqlite, gd
                  tools: cs2pr

            - uses: ramsey/composer-install@v3
              with:
                  dependency-versions: highest

            - name: Setup problem matchers for PHPUnit
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Run PHPStan analysis
              run: composer run-script phpstan

            - name: Run test suite on SQLite
              run: composer run-script --timeout=600 test

    mysql-tests:
        name: Tests on MySQL
        services:
            mysql:
                image: mysql:8.0
                ports:
                    - 3306/tcp
                env:
                    MYSQL_RANDOM_ROOT_PASSWORD: true
                    MYSQL_USER: mysql
                    MYSQL_PASSWORD: mysql
                    MYSQL_DATABASE: testdb
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5
        runs-on: "ubuntu-22.04"
        timeout-minutes: 60

        strategy:
            fail-fast: false
            matrix:
                php:
                    - '8.3'

        steps:
            -   uses: actions/checkout@v4

            -   name: Setup PHP Action
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none
                    extensions: pdo_mysql, gd
                    tools: cs2pr

            -   uses: ramsey/composer-install@v3
                with:
                    dependency-versions: highest

            -   name: Setup problem matchers for PHPUnit
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Run integration test suite vs MySQL
                run: composer run-script test
                env:
                    MYSQL_DATABASE_URL: "mysql://mysql:mysql@127.0.0.1:${{ job.services.mysql.ports[3306] }}/testdb"
